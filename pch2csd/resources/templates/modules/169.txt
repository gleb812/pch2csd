;@ map ENVtim
;@ ins k k k k k k
;@ outs k k

opcode ModAHD, 0, kkkkkkkkkkkkkkkk
kA_,kH_,kD_,kAM,kHM,kDM,kType,kKB, kTrig_,kAi,kHi,kDi,kin,kAMi,kEnvO,kout xin

	k1[] fillarray 1,-1, 1,-1, 2,-2
	k2[] fillarray 0, 1,-1, 0,-1, 1

	kIn zkr kin
  kam zkr kAi
  khm zkr kHi
  kdm zkr kDi

	kEnv init 0
	kEnv0 init 0
	kEnv1 init 0
	kstate init 0
	kTime0 init 0
	kTime init 0
	kAM init 1

	kA table kA_+kam*kAM, giENVtim
	kD table kD_+khm*kHM, giENVtim
	kH table kH_+kdm*kDM, giENVtim

	kA /= 1000
	kD /= 1000
	kH /= 1000

	if kAMi < 2 goto NoAM
		kAM zkr kAMi
NoAM:
kTrig zkr kTrig_
	if kKB!= 1 goto NoKB
		kTrig += gkGate
NoKB:
		kTime0 = kTime
		kEnv0 = kEnv

kTrigT trigger kTrig, 0.000001, 0
if kTrigT == 1 then
	if kstate == 0 then
		kEnv = 0
		kTime = 0
		kEnv0 = 0
		kTime0 = 0
		kstate = 1
	endif
endif
	if kstate == 0 goto EnvOut
	if kstate == 2 goto Hold
	if kstate == 3 goto Decay
Attack:
	kEnv += 1/(kr*kA)
	kTime += 1
	kEnv limit kEnv, 0, 1

	if kEnv < 1 goto EnvOut
	kstate = 2; Hold
	kTime = 0
	kEnv0 = 1
	kTime0 = 0
Hold:
	kTime += 1
	if (kTime/kr) < kH goto EnvOut
	kstate = 3 ; Decay
	kTime = 0
	kEnv0 = 1
	kTime0 = 0
Decay:
	kEnv = kEnv0*(exp(-8*(kTime-kTime0)/(kD*kr)))
	kTime += 1

	kEnv limit kEnv, 0, 1
	if (kTime/kr) < kD  goto EnvOut
	kstate = 0  ; back to waiting for trig
	kTime = 0
	kEnv0 = 0
	kTime0 = 0
EnvOut:
	kEnv *= kAM
	kEnv1 = kEnv*k1[kType]+k2[kType]
	zkw kEnv1, kEnvO
	zkw kEnv1*kIn, kout
endop

;@ ins k k k k a k
;@ outs k a

opcode ModAHD, 0, kkkkkkkkkkkkkkkk
kA_,kH_,kD_,kAM,kHM,kDM,kType,kKB, kTrig_,kAi,kHi,kDi,kin,kAMi,kEnvO,kout xin

	k1[] fillarray 1,-1, 1,-1, 2,-2
	k2[] fillarray 0, 1,-1, 0,-1, 1

	aIn zar kin
  kam zkr kAi
  khm zkr kHi
  kdm zkr kDi

	kEnv init 0
	kEnv0 init 0
	kEnv1 init 0
	kstate init 0
	kTime0 init 0
	kTime init 0
	kAM init 1

	kA table kA_+kam*kAM, giENVtim
	kD table kD_+khm*kHM, giENVtim
	kH table kH_+kdm*kDM, giENVtim

	kA /= 1000
	kD /= 1000
	kH /= 1000

	if kAMi < 2 goto NoAM
		kAM zkr kAMi
NoAM:
kTrig zkr kTrig_
	if kKB!= 1 goto NoKB
		kTrig += gkGate
NoKB:
		kTime0 = kTime
		kEnv0 = kEnv

kTrigT trigger kTrig, 0.000001, 0
if kTrigT == 1 then
	if kstate == 0 then
		kEnv = 0
		kTime = 0
		kEnv0 = 0
		kTime0 = 0
		kstate = 1
	endif
endif
	if kstate == 0 goto EnvOut
	if kstate == 2 goto Hold
	if kstate == 3 goto Decay
Attack:
	kEnv += 1/(kr*kA)
	kTime += 1
	kEnv limit kEnv, 0, 1

	if kEnv < 1 goto EnvOut
	kstate = 2; Hold
	kTime = 0
	kEnv0 = 1
	kTime0 = 0
Hold:
	kTime += 1
	if (kTime/kr) < kH goto EnvOut
	kstate = 3 ; Decay
	kTime = 0
	kEnv0 = 1
	kTime0 = 0
Decay:
	kEnv = kEnv0*(exp(-8*(kTime-kTime0)/(kD*kr)))
	kTime += 1

	kEnv limit kEnv, 0, 1
	if (kTime/kr) < kD  goto EnvOut
	kstate = 0  ; back to waiting for trig
	kTime = 0
	kEnv0 = 0
	kTime0 = 0
EnvOut:
	kEnv *= kAM
	kEnv1 = kEnv*k1[kType]+k2[kType]
	zkw kEnv1, kEnvO
	zaw kEnv1*aIn, kout
endop
